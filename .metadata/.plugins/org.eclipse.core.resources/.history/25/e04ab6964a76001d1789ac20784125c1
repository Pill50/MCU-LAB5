/*
 * fsm.c
 *
 *  Created on: Dec 7, 2022
 *      Author: DELL
 */

#include "fsm.h"
extern ADC_HandleTypeDef hadc1;
extern UART_HandleTypeDef huart2;

//Global variable
uint8_t buffer_byte = 0;
uint8_t buffer[MAX_BUFFER_SIZE];
uint8_t index_buffer = 0;
uint8_t buffer_flag = 0;

//Local variable
int status = INIT;
uint8_t cmd_flag = INIT;
uint8_t cmd_data[MAX_CMD_SIZE];
uint8_t cmd_data_index = 0;
int ADC_value = 0;

// HELPER FUNCTION START
int isCmdEqualToRST(uint8_t str[]){
	int flag = 0;
	if (str[0] == 'R' && str[1] == 'S' && str[2] == 'T')
		flag = 1;
	else
		flag = 0;
	return flag;
}

int isCmdEqualToOK(uint8_t str[]){
	int flag = 0;
	if (str[0] == 'O' && str[1] == 'K')
		flag = 1;
	else
		flag = 0;
	return flag;
}
// HELPER FUNCTION END

void command_parser_fsm() {
	  HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
	switch(status) {
		case INIT:
			if(buffer_byte == '!')
				status = READING;
			break;
		case READING:
			if(buffer_byte != '!' && buffer_byte != '#') {
				cmd_data[cmd_data_index] = buffer_byte;
				cmd_data_index++;
			}
			if (buffer_byte == '#') {
				status = STOP;
				cmd_data_index = 0;
			}
			break;
		case STOP:
			if (isCmdEqualToRST(cmd_data)==1){
				cmd_flag = RST;
				setTimer1(1);
			}
			else if (isCmdEqualToOK(cmd_data)==1){
				cmd_flag = OK;
			}
			status = INIT;
			break;
		default:
			break;
	}
}

void uart_communication_fsm() {
	char str[50];
	switch(cmd_flag){
		case RST:
			if (timer1_flag == 1){
				ADC_value = HAL_ADC_GetValue(&hadc1);
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "!ADC=%d#\r\n",ADC_value), 500);
				setTimer1(3000);
			}
		    break;
		case OK:
			ADC_value = -1;
			cmd_flag = INIT;
			break;
		default:
			break;
	}
}


